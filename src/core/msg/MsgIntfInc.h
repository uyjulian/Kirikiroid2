// Hardcoded internal strings
#ifndef __MSG_INTF_INC_H__
#define __MSG_INTF_INC_H__
TVP_MSG_DECL_CONST(TVPVersionInformation, TJS_W("Kirikiri Z Executable core /%1 (Compiled on %DATE% %TIME%) TJS2/%2 Copyright (C) 1997-2013 W.Dee and contributors All rights reserved."))
TVP_MSG_DECL_CONST(TVPVersionInformation2, TJS_W("The details of version information can be perused if -about is attached and started. "))
TVP_MSG_DECL_CONST(TVPDownloadPageURL, TJS_W("http://krkrz.github.io/"))
TVP_MSG_DECL_CONST(TVPInternalError, TJS_W("Internal Error: at %1 line %2"))
TVP_MSG_DECL_CONST(TVPInvalidParam, TJS_W("Invalid Parameter"))
TVP_MSG_DECL_CONST(TVPWarnDebugOptionEnabled, TJS_W("Debug option enabled"))
TVP_MSG_DECL_CONST(TVPCommandLineParamIgnoredAndDefaultUsed, TJS_W("Command line parameter %1 = %2 is invalid. It's used default."))
TVP_MSG_DECL_CONST(TVPInvalidCommandLineParam, TJS_W("Command line parameter %1 = %2 is invalid."))
TVP_MSG_DECL_CONST(TVPNotImplemented, TJS_W("Not implemented"))
TVP_MSG_DECL_CONST(TVPCannotOpenStorage, TJS_W("Cannot open storage %1"))
TVP_MSG_DECL_CONST(TVPCannotFindStorage, TJS_W("Cannot find storage %1"))
TVP_MSG_DECL_CONST(TVPCannotOpenStorageForWrite, TJS_W("Cannot open storage %1 for writing"))
TVP_MSG_DECL_CONST(TVPStorageInArchiveNotFound, TJS_W("Cannot find storage %1 in archive %2"))
TVP_MSG_DECL_CONST(TVPInvalidPathName, TJS_W("Invalid path name %1"))
TVP_MSG_DECL_CONST(TVPUnsupportedMediaName, TJS_W("Not supported media type \"%1\""))
TVP_MSG_DECL_CONST(TVPCannotUnbindXP3EXE, TJS_W("Cannot unbind XP3 exe %1"))
TVP_MSG_DECL_CONST(TVPCannotFindXP3Mark, TJS_W("%1 is not XP3 archive or unsupported"))
TVP_MSG_DECL_CONST(TVPMissingPathDelimiterAtLast, TJS_W("Use path delimiter '>' or '/'"))
TVP_MSG_DECL_CONST(TVPFilenameContainsSharpWarn, TJS_W("(Attention) Filename \"%1\" contains '#'"))
TVP_MSG_DECL_CONST(TVPCannotGetLocalName, TJS_W("Cannot get local name from %1"))
TVP_MSG_DECL_CONST(TVPReadError, TJS_W("Read error"))
TVP_MSG_DECL_CONST(TVPWriteError, TJS_W("Write error"))
TVP_MSG_DECL_CONST(TVPSeekError, TJS_W("Seek error"))
TVP_MSG_DECL_CONST(TVPTruncateError, TJS_W("Truncate error"))
TVP_MSG_DECL_CONST(TVPInsufficientMemory, TJS_W("Cannot allocate memory"))
TVP_MSG_DECL_CONST(TVPUncompressionFailed, TJS_W("Unpompression failed"))
TVP_MSG_DECL_CONST(TVPCompressionFailed, TJS_W("Compression failed"))
TVP_MSG_DECL_CONST(TVPCannotWriteToArchive, TJS_W("Cannot write to archive"))
TVP_MSG_DECL_CONST(TVPUnsupportedCipherMode, TJS_W("%1 is unsupported cipger mode"))
TVP_MSG_DECL_CONST(TVPUnsupportedEncoding, TJS_W("%1 is unsupported encoding"))
TVP_MSG_DECL_CONST(TVPUnsupportedModeString, TJS_W("%1 is unsupported mode string"))
TVP_MSG_DECL_CONST(TVPUnknownGraphicFormat, TJS_W("Unknown graphic format %1"))
TVP_MSG_DECL_CONST(TVPCannotSuggestGraphicExtension, TJS_W("Cannot suggest graphics extension for %1"))
TVP_MSG_DECL_CONST(TVPMaskSizeMismatch, TJS_W("Mask size mismath"))
TVP_MSG_DECL_CONST(TVPProvinceSizeMismatch, TJS_W("Province image %1 size mismatch"))
TVP_MSG_DECL_CONST(TVPImageLoadError, TJS_W("Image Load Error /%1"))
TVP_MSG_DECL_CONST(TVPJPEGLoadError, TJS_W("JPEG Read Error /%1"))
TVP_MSG_DECL_CONST(TVPPNGLoadError, TJS_W("PNG Read Error /%1"))
TVP_MSG_DECL_CONST(TVPERILoadError, TJS_W("ERI Read Error /%1"))
TVP_MSG_DECL_CONST(TVPTLGLoadError, TJS_W("TLG Read Error /%1"))
TVP_MSG_DECL_CONST(TVPInvalidImageSaveType, TJS_W("Invalid image save type (%1)"))
TVP_MSG_DECL_CONST(TVPInvalidOperationFor8BPP, TJS_W("Invalid operation for 8bpp"))
TVP_MSG_DECL_CONST(TVPInvalidOperationFor32BPP, TJS_W("Invalid operation for 32bpp"))
TVP_MSG_DECL_CONST(TVPSpecifyWindow, TJS_W("Specify Window class object"))
TVP_MSG_DECL_CONST(TVPSpecifyLayer, TJS_W("Specify Layer class object"))
TVP_MSG_DECL_CONST(TVPSpecifyLayerOrBitmap, TJS_W("Specify Layer or Bitmap class object"))
TVP_MSG_DECL_CONST(TVPCannotAcceptModeAuto, TJS_W("Cannot accept omAuto mode"))
TVP_MSG_DECL_CONST(TVPCannotCreateEmptyLayerImage, TJS_W("Cannot create empty layer image"))
TVP_MSG_DECL_CONST(TVPCannotSetPrimaryInvisible, TJS_W("Cannot set primary layer invisible"))
TVP_MSG_DECL_CONST(TVPCannotMovePrimary, TJS_W("Cannot move primary layer"))
TVP_MSG_DECL_CONST(TVPCannotSetParentSelf, TJS_W("Cannot set parent self"))
TVP_MSG_DECL_CONST(TVPCannotMoveNextToSelfOrNotSiblings, TJS_W("Cannot move next to self or not siblings"))
TVP_MSG_DECL_CONST(TVPCannotMovePrimaryOrSiblingless, TJS_W("Cannot move primary or siblingless"))
TVP_MSG_DECL_CONST(TVPCannotMoveToUnderOtherPrimaryLayer, TJS_W("Cannot move to under Other primary layer"))
TVP_MSG_DECL_CONST(TVPInvalidImagePosition, TJS_W("Invalid Image position"))
TVP_MSG_DECL_CONST(TVPCannotSetModeToDisabledOrModal, TJS_W("Cannot set Mode to disabled or modal"))
TVP_MSG_DECL_CONST(TVPNotDrawableLayerType, TJS_W("Not drawable layer type"))
TVP_MSG_DECL_CONST(TVPSourceLayerHasNoImage, TJS_W("Source layer has no image"))
TVP_MSG_DECL_CONST(TVPUnsupportedLayerType, TJS_W("Unsupported layer type %1"))
TVP_MSG_DECL_CONST(TVPNotDrawableFaceType, TJS_W("Not drawble face type %1"))
TVP_MSG_DECL_CONST(TVPCannotConvertLayerTypeUsingGivenDirection, TJS_W("Cannot convert layer type using given direction"))
TVP_MSG_DECL_CONST(TVPNegativeOpacityNotSupportedOnThisFace, TJS_W("Negative opacity not supported on this face"))
TVP_MSG_DECL_CONST(TVPSrcRectOutOfBitmap, TJS_W("Source rectangle out of bitmap"))
TVP_MSG_DECL_CONST(TVPBoxBlurAreaMustContainCenterPixel, TJS_W("Box blur area must contain center pixel"))
TVP_MSG_DECL_CONST(TVPBoxBlurAreaMustBeSmallerThan16Million, TJS_W("Box blur area must be smaller than 16 million"))
TVP_MSG_DECL_CONST(TVPCannotChangeFocusInProcessingFocus, TJS_W("Cannot change focus in processing focus"))
TVP_MSG_DECL_CONST(TVPWindowHasNoLayer, TJS_W("Window has no layer"))
TVP_MSG_DECL_CONST(TVPWindowHasAlreadyPrimaryLayer, TJS_W("Window has already primary layer"))
TVP_MSG_DECL_CONST(TVPSpecifiedEventNeedsParameter, TJS_W("Specified event %1 needs parameter"))
TVP_MSG_DECL_CONST(TVPSpecifiedEventNeedsParameter2, TJS_W("Specified event %1 needs parameter %2"))
TVP_MSG_DECL_CONST(TVPSpecifiedEventNameIsUnknown, TJS_W("Specified event name %1 is unknown"))
TVP_MSG_DECL_CONST(TVPOutOfRectangle, TJS_W("Out of Rectangle"))
TVP_MSG_DECL_CONST(TVPInvalidMethodInUpdating, TJS_W("Invalid method in updating"))
TVP_MSG_DECL_CONST(TVPCannotCreateInstance, TJS_W("Cannot create instance"))
TVP_MSG_DECL_CONST(TVPUnknownWaveFormat, TJS_W("Unknown wave format %1"))
TVP_MSG_DECL_CONST(TVPCurrentTransitionMustBeStopping, TJS_W("Current transition must be stopping"))
TVP_MSG_DECL_CONST(TVPTransHandlerError, TJS_W("Transition handler error %1"))
TVP_MSG_DECL_CONST(TVPTransAlreadyRegistered, TJS_W("Transition %1 already registerd"))
TVP_MSG_DECL_CONST(TVPCannotFindTransHander, TJS_W("Cannot find transition handler %1"))
TVP_MSG_DECL_CONST(TVPSpecifyTransitionSource, TJS_W("Specify transition source"))
TVP_MSG_DECL_CONST(TVPLayerCannotHaveImage, TJS_W("This layer cannot have image"))
TVP_MSG_DECL_CONST(TVPTransitionSourceAndDestinationMustHaveImage, TJS_W("Transition source and destination must have image"))
TVP_MSG_DECL_CONST(TVPCannotLoadRuleGraphic, TJS_W("Cannot load rule graphics %1"))
TVP_MSG_DECL_CONST(TVPSpecifyOption, TJS_W("Specify option %1"))
TVP_MSG_DECL_CONST(TVPTransitionLayerSizeMismatch, TJS_W("Transition layer size mismatch %1 and %2"))
TVP_MSG_DECL_CONST(TVPTransitionMutualSource, TJS_W("Transition mutual source"))
TVP_MSG_DECL_CONST(TVPHoldDestinationAlphaParameterIsNowDeprecated, TJS_W("Warring : Method %1 %2th parameter had is ignore. Hold destination alpha parameter is now deprecated."))
TVP_MSG_DECL_CONST(TVPCannotConnectMultipleWaveSoundBufferAtOnce, TJS_W("Cannot connect multiple wave sound buffer at once"))
TVP_MSG_DECL_CONST(TVPInvalidWindowSizeMustBeIn64to32768, TJS_W("Invalid window size must be in 64 to 32768"))
TVP_MSG_DECL_CONST(TVPInvalidOverlapCountMustBeIn2to32, TJS_W("Invalid overlap count must be in 2 to 32"))
TVP_MSG_DECL_CONST(TVPCurrentlyAsyncLoadBitmap, TJS_W("Currently async load bitmap"))
TVP_MSG_DECL_CONST(TVPFaildClipboardCopy, TJS_W("copying to clipboard failed."))
TVP_MSG_DECL_CONST(TVPInvalidUTF16ToUTF8, TJS_W("Invalid UTF-16 to UTF-8"))
TVP_MSG_DECL_CONST(TVPInfoLoadingStartupScript, TJS_W("(info) Loading startup script : "))
TVP_MSG_DECL_CONST(TVPInfoStartupScriptEnded, TJS_W("(info) Startup script ended."))
TVP_MSG_DECL_CONST(TVPTjsCharMustBeTwoOrFour, TJS_W("sizeof(tjs_char) must be 2 or 4."))
TVP_MSG_DECL_CONST(TVPMediaNameHadAlreadyBeenRegistered, TJS_W("Media name \"%1\" had already been registered"))
TVP_MSG_DECL_CONST(TVPMediaNameIsNotRegistered, TJS_W("Media name \"%1\" is not registered"))
TVP_MSG_DECL_CONST(TVPInfoRebuildingAutoPath, TJS_W("(info) Rebuilding Auto Path Table ..."))
TVP_MSG_DECL_CONST(TVPInfoTotalFileFoundAndActivated, TJS_W("(info) Total %1 file(s) found, %2 file(s) activated. (%3ms)"))
TVP_MSG_DECL_CONST(TVPErrorInRetrievingSystemOnActivateOnDeactivate, TJS_W("Error in retrieving System.onActivate/onDeactivate : %1"))
TVP_MSG_DECL_CONST(TVPTheHostIsNotA16BitUnicodeSystem, TJS_W("The host is not a 16-bit unicode system."))
TVP_MSG_DECL_CONST(TVPInfoTryingToReadXp3VirtualFileSystemInformationFrom, TJS_W("(info) Trying to read XP3 virtual file system information from : %1"))
TVP_MSG_DECL_CONST(TVPSpecifiedStorageHadBeenProtected, TJS_W("Specified storage had been protected!"))
TVP_MSG_DECL_CONST(TVPInfoFailed, TJS_W("(info) Failed."))
TVP_MSG_DECL_CONST(TVPInfoDoneWithContains, TJS_W("(info) Done. (contains %1 file(s), %2 segment(s))"))
TVP_MSG_DECL_CONST(TVPSeparatorCRLF, TJS_W("\r\n\r\n\r\n==============================================================================\r\n==============================================================================\r\n"))
TVP_MSG_DECL_CONST(TVPSeparatorCR, TJS_W("\n\n\n==============================================================================\n==============================================================================\n"))
// TVP_MSG_DECL_CONST(TVPDefaultFontName, TJS_W("DEFAULT_GUI_FONT"))
TVP_MSG_DECL_CONST(TVPCannotOpenFontFile, TJS_W("Can't open font file '%1$s'"))
TVP_MSG_DECL_CONST(TVPFontCannotBeUsed, TJS_W("Font '%1$s' cannot be used"))
TVP_MSG_DECL_CONST(TVPFontRasterizeError, TJS_W("Font Rasterize error."))
TVP_MSG_DECL_CONST(TVPBitFieldsNotSupported, TJS_W("BITFIELDS not supported."))
TVP_MSG_DECL_CONST(TVPCompressedBmpNotSupported, TJS_W("Compressed BMP not supported."))
TVP_MSG_DECL_CONST(TVPUnsupportedColorModeForPalettImage, TJS_W("Unsupported color mode for palettized image."))
TVP_MSG_DECL_CONST(TVPNotWindowsBmp, TJS_W("This is not a Windows BMP file or an OS/2 BMP file."))
TVP_MSG_DECL_CONST(TVPUnsupportedHeaderVersion, TJS_W("Non-supported header version."))
TVP_MSG_DECL_CONST(TVPInfoTouching, TJS_W("(info) Touching "))
TVP_MSG_DECL_CONST(TVPAbortedTimeOut, TJS_W(" ... aborted [timed out]"))
TVP_MSG_DECL_CONST(TVPAbortedLimitByte, TJS_W(" ... aborted [limit bytes exceeded]"))
TVP_MSG_DECL_CONST(TVPFaildGlyphForDrawGlyph, TJS_W("Faild glyph for DrawGlyph."))
TVP_MSG_DECL_CONST(TVPLayerObjectIsNotProperlyConstructed, TJS_W("Panic! Layer object is not properly constructed. The constructor was not called??"))
TVP_MSG_DECL_CONST(TVPUnknownUpdateType, TJS_W("Unknown update type"))
TVP_MSG_DECL_CONST(TVPUnknownTransitionType, TJS_W("Unknown transition type"))
TVP_MSG_DECL_CONST(TVPUnsupportedUpdateTypeTutGiveUpdate, TJS_W("Update type of tutGiveUpdate is not yet supported"))
TVP_MSG_DECL_CONST(TVPErrorCode, TJS_W("error code : "))
TVP_MSG_DECL_CONST(TVPUnsupportedJpegPalette, TJS_W("JPEG does not support palettized image"))
TVP_MSG_DECL_CONST(TVPLibpngError, TJS_W("libpng error."))
TVP_MSG_DECL_CONST(TVPUnsupportedColorTypePalette, TJS_W("Unsupported color type for palattized image"))
TVP_MSG_DECL_CONST(TVPUnsupportedColorType, TJS_W("Unsupported color type"))
TVP_MSG_DECL_CONST(TVPTooLargeImage, TJS_W("Too large image"))
TVP_MSG_DECL_CONST(TVPPngSaveError, TJS_W("PNG save error."))
TVP_MSG_DECL_CONST(TVPTlgUnsupportedUniversalTransitionRule, TJS_W("TLG cannot be used as universal transition rule, province(_p) or mask(_m) images."))
TVP_MSG_DECL_CONST(TVPUnsupportedColorCount, TJS_W("Unsupported color count : "))
TVP_MSG_DECL_CONST(TVPDataFlagMustBeZero, TJS_W("Data flag must be 0 (any flags are not yet supported)"))
TVP_MSG_DECL_CONST(TVPUnsupportedColorTypeColon, TJS_W("Unsupported color type : "))
TVP_MSG_DECL_CONST(TVPUnsupportedExternalGolombBitLengthTable, TJS_W("External golomb bit length table is not yet supported."))
TVP_MSG_DECL_CONST(TVPUnsupportedEntropyCodingMethod, TJS_W("Unsupported entropy coding method"))
TVP_MSG_DECL_CONST(TVPInvalidTlgHeaderOrVersion, TJS_W("Invalid TLG header or unsupported TLG version."))
TVP_MSG_DECL_CONST(TVPTlgMalformedTagMissionColonAfterNameLength, TJS_W("Malformed TLG SDS tag structure, missing colon after name length"))
TVP_MSG_DECL_CONST(TVPTlgMalformedTagMissionEqualsAfterName, TJS_W("Malformed TLG SDS tag structure, missing equals after name"))
TVP_MSG_DECL_CONST(TVPTlgMalformedTagMissionColonAfterVaueLength, TJS_W("Malformed TLG SDS tag structure, missing colon after value length"))
TVP_MSG_DECL_CONST(TVPTlgMalformedTagMissionCommaAfterTag, TJS_W("Malformed TLG SDS tag structure, missing comma after a tag"))
TVP_MSG_DECL_CONST(TVPFileSizeIsZero, TJS_W("File size is zero."))
TVP_MSG_DECL_CONST(TVPMemoryAllocationError, TJS_W("Memory allocation error."))
TVP_MSG_DECL_CONST(TVPFileReadError, TJS_W("File read error."))
TVP_MSG_DECL_CONST(TVPInvalidPrerenderedFontFile, TJS_W("Signature not found or invalid pre-rendered font file."))
TVP_MSG_DECL_CONST(TVPNot16BitUnicodeFontFile, TJS_W("Not a 16-bit UNICODE font file."))
TVP_MSG_DECL_CONST(TVPInvalidHeaderVersion, TJS_W("Invalid header version."))
TVP_MSG_DECL_CONST(TVPTlgInsufficientMemory, TJS_W("SaveTLG6: Insufficient memory"))
TVP_MSG_DECL_CONST(TVPTlgTooLargeBitLength, TJS_W("SaveTLG6: Too large bit length (given image may be too large)"))
TVP_MSG_DECL_CONST(TVPCannotRetriveInterfaceFromDrawDevice, TJS_W("Could not retrive interface from given draw device"))
TVP_MSG_DECL_CONST(TVPIllegalCharacterConversionUTF16toUTF8, TJS_W("Illegal character conversion. UTF-16 to UTF-8."))
TVP_MSG_DECL_CONST(TVPRequireLayerTreeOwnerInterfaceInterface, TJS_W("require layerTreeOwnerInterface interface"))
#endif
